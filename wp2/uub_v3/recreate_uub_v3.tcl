#
# Vivado (TM) v2015.2 (64-bit)
#
# recreate_uub_v3.tcl: Tcl script for re-creating project 'uub_v3'
#
# Generated by Vivado on Sun Feb 21 21:06:24 EST 2021
# IP Build 1264090 on Wed Jun 24 14:22:01 MDT 2015
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (recreate_uub_v3.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/uub_v3.bd"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_sde_trigger_0_0/uub_v3_sde_trigger_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_amiga_trigger_0_0/uub_v3_amiga_trigger_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_fake_signal_0_0/uub_v3_fake_signal_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_test_control_0_0/uub_v3_test_control_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_fake_rd_0_0/uub_v3_fake_rd_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_clock_1pps_0_0/uub_v3_clock_1pps_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_0_0/uub_v3_ddr_synchronizer_24bit_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_1_0/uub_v3_ddr_synchronizer_24bit_1_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_2_0/uub_v3_ddr_synchronizer_24bit_2_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_3_0/uub_v3_ddr_synchronizer_24bit_3_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_4_0/uub_v3_ddr_synchronizer_24bit_4_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_interface_uub_dfn3_0_0/uub_v3_interface_uub_dfn3_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_time_tagging_0_0/uub_v3_time_tagging_0_0.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/imports/hdl/uub_v3_wrapper.v"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_rd_interface_0_2/uub_v3_rd_interface_0_2.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_digital_interface_0_1/uub_v3_digital_interface_0_1.upgrade_log"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/sources_1/imports/uub_v3/archive_project_summary.txt"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/archive_project_summary.txt"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/constrs_1/imports/constraints/vivado_uub.xdc"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/constrs_1/imports/constraints/Timing_contraints_uub.xdc"
#    "/home/dfnitz/scratch/git_clones/uub-firmware/wp2/uub_v3/uub_v3.srcs/constrs_1/imports/constraints/uub_wrapper.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project uub_v3 ./uub_v3

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects uub_v3]
set_property "default_lib" "xil_defaultlib" $obj
set_property "part" "xc7z020clg484-1" $obj
set_property "simulator_language" "Mixed" $obj
set_property "source_mgmt_mode" "DisplayOnly" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../../ip_repo"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/archive_project_summary.txt"]"\
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/uub_v3.bd"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_sde_trigger_0_0/uub_v3_sde_trigger_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_amiga_trigger_0_0/uub_v3_amiga_trigger_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_fake_signal_0_0/uub_v3_fake_signal_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_test_control_0_0/uub_v3_test_control_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_fake_rd_0_0/uub_v3_fake_rd_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_clock_1pps_0_0/uub_v3_clock_1pps_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_0_0/uub_v3_ddr_synchronizer_24bit_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_1_0/uub_v3_ddr_synchronizer_24bit_1_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_2_0/uub_v3_ddr_synchronizer_24bit_2_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_3_0/uub_v3_ddr_synchronizer_24bit_3_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_ddr_synchronizer_24bit_4_0/uub_v3_ddr_synchronizer_24bit_4_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_interface_uub_dfn3_0_0/uub_v3_interface_uub_dfn3_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_time_tagging_0_0/uub_v3_time_tagging_0_0.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/imports/hdl/uub_v3_wrapper.v"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_rd_interface_0_2/uub_v3_rd_interface_0_2.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/bd/uub_v3/ip/uub_v3_digital_interface_0_1/uub_v3_digital_interface_0_1.upgrade_log"]"\
 "[file normalize "$origin_dir/uub_v3.srcs/sources_1/imports/uub_v3/archive_project_summary.txt"]"\
 "[file normalize "$origin_dir/archive_project_summary.txt"]"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "uub_v3/uub_v3.bd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
if { ![get_property "is_locked" $file_obj] } {
  set_property "generate_synth_checkpoint" "0" $file_obj
}

set file "uub_v3_sde_trigger_0_0/uub_v3_sde_trigger_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_amiga_trigger_0_0/uub_v3_amiga_trigger_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_fake_signal_0_0/uub_v3_fake_signal_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_test_control_0_0/uub_v3_test_control_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_fake_rd_0_0/uub_v3_fake_rd_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_clock_1pps_0_0/uub_v3_clock_1pps_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_ddr_synchronizer_24bit_0_0/uub_v3_ddr_synchronizer_24bit_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_ddr_synchronizer_24bit_1_0/uub_v3_ddr_synchronizer_24bit_1_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_ddr_synchronizer_24bit_2_0/uub_v3_ddr_synchronizer_24bit_2_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_ddr_synchronizer_24bit_3_0/uub_v3_ddr_synchronizer_24bit_3_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_ddr_synchronizer_24bit_4_0/uub_v3_ddr_synchronizer_24bit_4_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_interface_uub_dfn3_0_0/uub_v3_interface_uub_dfn3_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_time_tagging_0_0/uub_v3_time_tagging_0_0.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_rd_interface_0_2/uub_v3_rd_interface_0_2.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj

set file "uub_v3_digital_interface_0_1/uub_v3_digital_interface_0_1.upgrade_log"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP Update Log" $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "uub_v3_wrapper" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/uub_v3.srcs/constrs_1/imports/constraints/vivado_uub.xdc"]"
set file_imported [import_files -fileset constrs_1 $file]
set file "constraints/vivado_uub.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/uub_v3.srcs/constrs_1/imports/constraints/Timing_contraints_uub.xdc"]"
set file_imported [import_files -fileset constrs_1 $file]
set file "constraints/Timing_contraints_uub.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/uub_v3.srcs/constrs_1/imports/constraints/uub_wrapper.xdc"]"
set file_imported [import_files -fileset constrs_1 $file]
set file "constraints/uub_wrapper.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "$proj_dir/uub_v3.srcs/constrs_1/imports/constraints/Timing_contraints_uub.xdc" $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "uub_v3_wrapper" $obj
set_property "xelab.nosort" "1" $obj
set_property "xelab.unifast" "" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7z020clg484-1 -flow {Vivado Synthesis 2015} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2015" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property "part" "xc7z020clg484-1" $obj
set_property "steps.synth_design.args.flatten_hierarchy" "full" $obj
set_property "steps.synth_design.args.gated_clock_conversion" "auto" $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2015} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2015" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property "part" "xc7z020clg484-1" $obj
set_property "steps.place_design.args.directive" "ExtraNetDelay_low" $obj
set_property "steps.phys_opt_design.is_enabled" "1" $obj
set_property "steps.route_design.args.directive" "MoreGlobalIterations" $obj
set_property "steps.post_route_phys_opt_design.is_enabled" "1" $obj
set_property "steps.write_bitstream.args.readback_file" "0" $obj
set_property "steps.write_bitstream.args.verbose" "0" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:uub_v3"
